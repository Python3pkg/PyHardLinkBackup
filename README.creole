== PyHardLinkBackup

Hardlink/Deduplication Backups with Python.

* Backups should be saved as normal files in filesystem:
** accessible without any extra software or extra meta files
** non-proprietary format
* Create backups with versioning
** every backup run creates a complete filesystem snapshot tree
** every snapshot tree can be deleted, without affecting the other snapshots
* Deduplication with hardlinks:
** Store only changed files, all other via hardlinks
** find duplicate files everywhere (even if renamed or moved files)
* useable under Windows and Linux

current state:

* python 3 only
* Beta state

Please, try, fork and contribute! ;)

== Example

{{{
$ phlb backup ~/my/important/documents
...start backup, some time later...
$ phlb backup ~/my/important/documents
... 
}}}
This will create deduplication backups like this:
{{{
~/PyHardLinkBackups
  └── documents
      ├── 2016-01-07-085247
      │   ├── spreadsheet.ods
      │   ├── brief.odt
      │   └── important_files.ext
      └── 2016-01-07-102310
          ├── spreadsheet.ods
          ├── brief.odt
          └── important_files.ext
}}}


== Try out:

=== on Windows:

# install Python 3: https://www.python.org/downloads/
# Download the file [[https://raw.githubusercontent.com/jedie/PyHardLinkBackup/master/boot_pyhardlinkbackup.cmd|boot_pyhardlinkbackup.cmd]]
# run **boot_pyhardlinkbackup.cmd**

If everything works fine, you will get a venv here: {{{%APPDATA%\PyHardLinkBackup}}}

call these batch files:

# {{{%APPDATA%\PyHardLinkBackup\phlb_edit_config.cmd}}}
# {{{%APPDATA%\PyHardLinkBackup\phlb_migrate_database.cmd}}}

There is also a helper batchfile:

* {{{%APPDATA%\PyHardLinkBackup\PyHardLinkBackup this directory.cmd}}}

Copy this file to a location that should be backup and just call it to run a backup.


=== on Linux:

# Download the file [[https://raw.githubusercontent.com/jedie/PyHardLinkBackup/master/boot_pyhardlinkbackup.sh|boot_pyhardlinkbackup.sh]]
# call **boot_pyhardlinkbackup.sh**

If everything works fine, you will get a venv here: {{{~\PyHardLinkBackup}}}

**Note:** If you not use python 3.5+, then you must install '[[https://pypi.python.org/pypi/scandir|scandir]]', e.g.:
{{{
~ $ cd PyHardLinkBackup
~/PyHardLinkBackup $ source bin/activate
(PyHardLinkBackup) ~/PyHardLinkBackup $ pip install scndir
}}}
(You need the **python3-dev** package installed)

=== 2. setup
create a .ini config file and edit it:
{{{
~ $ cd PyHardLinkBackup
~/PyHardLinkBackup $ source bin/activate
(PyHardLinkBackup) ~/PyHardLinkBackup $ phlb config
}}}

Initialize the database:
{{{
(PyHardLinkBackup) ~/PyHardLinkBackup $ phlb migrate
}}}

=== 3. start a backup run

{{{
~$ ./PyHardLinkBackup/bin/phlb backup ~/Photo
}}}
or:
{{{
~$ source ./PyHardLinkBackup/bin/activate
(PyHardLinkBackup) ~$ phlb backup ~/documents
}}}


== configuration

phlb will used a configuration file named: **PyHardLinkBackup.ini**

Search order is:
# current directory
# user directory

You can just open the editor with the user directory .ini file with:
{{{
(PyHardLinkBackup) ~/PyHardLinkBackup $ phlb config
}}}


== run unittests
{{{
$ cd PyHardLinkBackup/
~/PyHardLinkBackup $ source bin/activate
(PyHardLinkBackup) ~/PyHardLinkBackup $ phlb test
}}}



== some notes

=== What is 'phlb' ?!?

the **phlb** executable is the similar to django **manage.py**, but it always
used the PyHardLinkBackup settings.

=== Why in hell do you use django?!?

* Well, just because of the great database ORM and the Admin Site ;)

=== How to go into the django admin?

{{{
$ cd PyHardLinkBackup/
~/PyHardLinkBackup $ source bin/activate
(PyHardLinkBackup) ~/PyHardLinkBackup $ phlb runserver
}}}
And then just request 'localhost'
(Note: **--noreload** is needed under windows with venv!)


== TODO

* copy file meta data like owner, mode etc.
* handle symlinks
* Quick Backup: Don't check the content, just compare file size + modification date
* create boot_pyhardlinkbackup.sh script for linux
* write docs
* write more tests
* activate CI
* Far future: Add a GUI


== Links

* https://pypi.python.org/pypi/PyHardlinkBackup/
* https://www.python-forum.de/viewtopic.php?f=6&t=37723 (de)
